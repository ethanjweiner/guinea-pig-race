# Generated by Django 5.1.7 on 2025-05-26 19:16

import datetime
import django.core.validators
import django.db.models.deletion
import main_site.models
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Registrant",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "first_name",
                    models.CharField(
                        max_length=255,
                        validators=[
                            django.core.validators.RegexValidator(
                                message="First name can only contain letters, spaces, and hyphens",
                                regex="^[a-zA-Z\\s\\-]+$",
                            )
                        ],
                    ),
                ),
                (
                    "last_name",
                    models.CharField(
                        max_length=255,
                        validators=[
                            django.core.validators.RegexValidator(
                                message="Last name can only contain letters, spaces, and hyphens",
                                regex="^[a-zA-Z\\s\\-]+$",
                            )
                        ],
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        max_length=255,
                        validators=[
                            django.core.validators.RegexValidator(
                                message="Please enter a valid email address",
                                regex="^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$",
                            )
                        ],
                    ),
                ),
                (
                    "date_of_birth",
                    models.DateField(
                        null=True,
                        validators=[
                            django.core.validators.MinValueValidator(
                                limit_value=datetime.date(1925, 5, 26),
                                message="Date of birth cannot be more than 100 years ago",
                            ),
                            django.core.validators.MaxValueValidator(
                                limit_value=datetime.date(2025, 5, 26),
                                message="Date of birth cannot be in the future",
                            ),
                        ],
                    ),
                ),
                (
                    "gender",
                    models.CharField(
                        choices=[
                            ("male", "Male"),
                            ("female", "Female"),
                            ("non-binary", "Non-Binary"),
                        ],
                        error_messages={
                            "invalid_choice": "Please select a valid gender option."
                        },
                        max_length=255,
                    ),
                ),
                (
                    "seed_time",
                    models.CharField(
                        max_length=255, validators=[main_site.models.validate_seed_time]
                    ),
                ),
                ("sponsor", models.CharField(blank=True, max_length=255, null=True)),
                ("year", models.IntegerField(default=2025)),
                (
                    "hometown",
                    models.CharField(
                        blank=True,
                        max_length=255,
                        null=True,
                        validators=[
                            django.core.validators.RegexValidator(
                                message="Hometown can only contain letters, spaces, hyphens, periods, and commas",
                                regex="^[a-zA-Z\\s\\-\\.,]+$",
                            )
                        ],
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "ordering": ["-created_at"],
                "constraints": [
                    models.UniqueConstraint(
                        fields=("email", "year"),
                        name="unique_registration_per_year",
                        violation_error_message="You have already registered for this year.",
                    )
                ],
            },
        ),
        migrations.CreateModel(
            name="Result",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("overall_place", models.IntegerField(null=True)),
                ("gender_place", models.IntegerField(null=True)),
                ("time", models.CharField(max_length=255)),
                ("dnf", models.BooleanField(default=False)),
                ("year", models.IntegerField()),
                (
                    "registrant",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="main_site.registrant",
                    ),
                ),
            ],
        ),
    ]
